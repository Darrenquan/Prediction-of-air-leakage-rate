import random
import numpy as np

# leakrate = 0.4339
# for i in range(2,36899):
#     j = random.uniform(-0.05 , 0.05)
#     new_leakrate = (1 + j) * leakrate
#     print(new_leakrate)
def sigmoid(x):
    # 第一层到第二层的激活函数
    return 1 / (1 + np.exp(-x))

def mse_loss(y_true, y_pred):
    # 使用方差作为损失函数
    return ((y_true - y_pred) ** 2).mean()

x = np.array([1038.15,2.15,786.772,150.291,143.578, -15.098,-14.972, -2.986,4.304,1642.67,8.388,10337.5,23.976,387.627,406.398])
w11=-0.46121
w12=0.30610
w13=0.26349
w14=-0.75894
w15=1.52611
w16=1.25123
w17=-0.92936
w18=0.39324
w19=-0.93121
w110=-0.76344
w111=-0.69289
w112=0.78097
w113=-0.40381
w114=0.41461
w115=-0.98382
w21=-0.13826
w22=1.08584
w23=0.95818
w24=1.02614
w25=1.08247
w26=0.69576
w27=-0.60948
w28=-0.23149
w29=0.66634
w210=1.98061
w211=2.33023
w212=0.28406
w213=0.83286
w214=0.27351
w215=-0.42722
w31=-2.16061
w32=-1.37255
w33=1.84645
w34=-0.05627
w35=-0.62652
w36=0.23250
w37=1.11896
w38=0.77355
w39=0.78200
w310=-1.75400
w311=-0.82835
w312=-1.19079
w313=-0.94567
w314=1.58831
w315=1.12500
w41=-0.46634
w42=-0.62457
w43=-0.66518
w44=-1.48874
w45=-1.03798
w46=-0.41356
w47=-1.71766
w48=0.36616
w49=-1.38517
w410=0.13550
w411=-1.85360
w412=-1.05355
w413=0.16974
w414=-0.40966
w415=0.62215
w1=-0.09444
w2=0.70429
w3=0.02146
w4=0.77082
b1=-3.39092
b2=-0.46619
b3=-1.20808
b4=-0.69581
b5=0.24521


hh1 = w11 * x[0] + w12 * x[1] + w13 * x[2] + w14 * x[3] + w15 * x[4] + w16 * x[
    5] + w17 * x[6] + w18 * x[7] + w19 * x[8] + w110 * x[9] + w111 * x[10] + w112 * x[
                 11] + w113 * x[12] + w114 * x[13] + w115 * x[14] + b1
hh2 = w21 * x[0] + w22 * x[1] + w23 * x[2] + w24 * x[3] + w25 * x[4] + w26 * x[
    5] + w27 * x[6] + w28 * x[7] + w29 * x[8] + w210 * x[9] + w211 * x[10] + w212 * x[
                 11] + w213 * x[12] + w214 * x[13] + w215 * x[14] + b2
hh3 = w31 * x[0] + w32 * x[1] + w33 * x[2] + w34 * x[3] + w35 * x[4] + w36 *x[
    5] + w37 * x[6] + w38 * x[7] + w39 * x[8] + w310 * x[9] + w311 * x[10] + w312 * x[
                 11] + w313 * x[12] + w314 * x[13] + w315 * x[14] + b3

hh4 = w41 * x[0] + w42 * x[1] + w43 * x[2] + w44 * x[3] + w45 * x[4] + w46 *x[
    5] + w47 * x[6] + w48 * x[7] + w49 * x[8] + w410 * x[9] + w411 * x[10] + w412 * x[
                 11] + w413 * x[12] + w414 * x[13] + w415 * x[14] + b4
h1 = sigmoid(hh1)
h2 = sigmoid(hh2)
h3 = sigmoid(hh3)
h4 = sigmoid(hh4)
o1 = y_pred = w1 * h1 + w2 * h2 + w3 * h3 + w4 * h4 + b5
print(mse_loss(0.430352513,o1))
print(o1,h1,h2,h3,h4,hh1,hh2,hh3,hh4)

